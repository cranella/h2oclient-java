package com.att.h2o.proxies.retrofit;

import retrofit2.Call;
import retrofit2.http.Field;
import retrofit2.http.FormUrlEncoded;
import retrofit2.http.POST;
import water.bindings.pojos.*;

public interface GridSearch {

    @FormUrlEncoded
    @POST("/99/Grid/xgboost")
    Call<GridSearchSchema> trainXgboost(@Field("hyper_parameters") String hyperParameters, @Field("search_criteria") String searchCriteria, @Field("ntrees") int var1, @Field("n_estimators") int var2, @Field("max_depth") int var3, @Field("min_rows") double var4, @Field("min_child_weight") double var6, @Field("learn_rate") double var8, @Field("eta") double var10, @Field("sample_rate") double var12, @Field("subsample") double var14, @Field("col_sample_rate") double var16, @Field("colsample_bylevel") double var18, @Field("col_sample_rate_per_tree") double var20, @Field("colsample_bytree") double var22, @Field("max_abs_leafnode_pred") float var24, @Field("max_delta_step") float var25, @Field("score_tree_interval") int var26, @Field("seed") long var27, @Field("min_split_improvement") float var29, @Field("gamma") float var30, @Field("nthread") int var31, @Field("max_bins") int var32, @Field("max_leaves") int var33, @Field("min_sum_hessian_in_leaf") float var34, @Field("min_data_in_leaf") float var35, @Field("tree_method") TreexgboostXGBoostModelXGBoostParametersTreeMethod var36, @Field("grow_policy") TreexgboostXGBoostModelXGBoostParametersGrowPolicy var37, @Field("booster") TreexgboostXGBoostModelXGBoostParametersBooster var38, @Field("reg_lambda") float var39, @Field("reg_alpha") float var40, @Field("quiet_mode") boolean var41, @Field("sample_type") TreexgboostXGBoostModelXGBoostParametersDartSampleType var42, @Field("normalize_type") TreexgboostXGBoostModelXGBoostParametersDartNormalizeType var43, @Field("rate_drop") float var44, @Field("one_drop") boolean var45, @Field("skip_drop") float var46, @Field("dmatrix_type") TreexgboostXGBoostModelXGBoostParametersDMatrixType var47, @Field("backend") TreexgboostXGBoostModelXGBoostParametersBackend var48, @Field("gpu_id") int var49, @Field("model_id") String var50, @Field("training_frame") String var51, @Field("validation_frame") String var52, @Field("nfolds") int var53, @Field("keep_cross_validation_predictions") boolean var54, @Field("keep_cross_validation_fold_assignment") boolean var55, @Field("parallelize_cross_validation") boolean var56, @Field("distribution") GenmodelutilsDistributionFamily var57, @Field("tweedie_power") double var58, @Field("quantile_alpha") double var60, @Field("huber_alpha") double var62, @Field("response_column") String var64, @Field("weights_column") String var65, @Field("offset_column") String var66, @Field("fold_column") String var67, @Field("fold_assignment") ModelParametersFoldAssignmentScheme var68, @Field("categorical_encoding") ModelParametersCategoricalEncodingScheme var69, @Field("max_categorical_levels") int var70, @Field("ignored_columns") String[] var71, @Field("ignore_const_cols") boolean var72, @Field("score_each_iteration") boolean var73, @Field("checkpoint") String var74, @Field("stopping_rounds") int var75, @Field("max_runtime_secs") double var76, @Field("stopping_metric") ScoreKeeperStoppingMetric var78, @Field("stopping_tolerance") double var79, @Field("custom_metric_func") String var81);

    @FormUrlEncoded
    @POST("/99/Grid/deeplearning")
    Call<GridSearchSchema> trainDeeplearning(@Field("hyper_parameters") String hyperParameters, @Field("search_criteria") String searchCriteria, @Field("balance_classes") boolean var1, @Field("class_sampling_factors") float[] var2, @Field("max_after_balance_size") float var3, @Field("max_confusion_matrix_size") int var4, @Field("max_hit_ratio_k") int var5, @Field("activation") DeepLearningActivation var6, @Field("hidden") int[] var7, @Field("epochs") double var8, @Field("train_samples_per_iteration") long var10, @Field("target_ratio_comm_to_comp") double var12, @Field("seed") long var14, @Field("adaptive_rate") boolean var16, @Field("rho") double var17, @Field("epsilon") double var19, @Field("rate") double var21, @Field("rate_annealing") double var23, @Field("rate_decay") double var25, @Field("momentum_start") double var27, @Field("momentum_ramp") double var29, @Field("momentum_stable") double var31, @Field("nesterov_accelerated_gradient") boolean var33, @Field("input_dropout_ratio") double var34, @Field("hidden_dropout_ratios") double[] var36, @Field("l1") double var37, @Field("l2") double var39, @Field("max_w2") float var41, @Field("initial_weight_distribution") DeepLearningInitialWeightDistribution var42, @Field("initial_weight_scale") double var43, @Field("initial_weights") String[] var45, @Field("initial_biases") String[] var46, @Field("loss") DeepLearningLoss var47, @Field("score_interval") double var48, @Field("score_training_samples") long var50, @Field("score_validation_samples") long var52, @Field("score_duty_cycle") double var54, @Field("classification_stop") double var56, @Field("regression_stop") double var58, @Field("quiet_mode") boolean var60, @Field("score_validation_sampling") DeepLearningClassSamplingMethod var61, @Field("overwrite_with_best_model") boolean var62, @Field("autoencoder") boolean var63, @Field("use_all_factor_levels") boolean var64, @Field("standardize") boolean var65, @Field("diagnostics") boolean var66, @Field("variable_importances") boolean var67, @Field("fast_mode") boolean var68, @Field("force_load_balance") boolean var69, @Field("replicate_training_data") boolean var70, @Field("single_node_mode") boolean var71, @Field("shuffle_training_data") boolean var72, @Field("missing_values_handling") DeepLearningMissingValuesHandling var73, @Field("sparse") boolean var74, @Field("col_major") boolean var75, @Field("average_activation") double var76, @Field("sparsity_beta") double var78, @Field("max_categorical_features") int var80, @Field("reproducible") boolean var81, @Field("export_weights_and_biases") boolean var82, @Field("mini_batch_size") int var83, @Field("elastic_averaging") boolean var84, @Field("elastic_averaging_moving_rate") double var85, @Field("elastic_averaging_regularization") double var87, @Field("pretrained_autoencoder") String var89, @Field("model_id") String var90, @Field("training_frame") String var91, @Field("validation_frame") String var92, @Field("nfolds") int var93, @Field("keep_cross_validation_predictions") boolean var94, @Field("keep_cross_validation_fold_assignment") boolean var95, @Field("parallelize_cross_validation") boolean var96, @Field("distribution") GenmodelutilsDistributionFamily var97, @Field("tweedie_power") double var98, @Field("quantile_alpha") double var100, @Field("huber_alpha") double var102, @Field("response_column") String var104, @Field("weights_column") String var105, @Field("offset_column") String var106, @Field("fold_column") String var107, @Field("fold_assignment") ModelParametersFoldAssignmentScheme var108, @Field("categorical_encoding") ModelParametersCategoricalEncodingScheme var109, @Field("max_categorical_levels") int var110, @Field("ignored_columns") String[] var111, @Field("ignore_const_cols") boolean var112, @Field("score_each_iteration") boolean var113, @Field("checkpoint") String var114, @Field("stopping_rounds") int var115, @Field("max_runtime_secs") double var116, @Field("stopping_metric") ScoreKeeperStoppingMetric var118, @Field("stopping_tolerance") double var119, @Field("custom_metric_func") String var121);

    @FormUrlEncoded
    @POST("/99/Grid/glm")
    Call<GridSearchSchema> trainGlm(@Field("hyper_parameters") String hyperParameters, @Field("search_criteria") String searchCriteria, @Field("seed") long var1, @Field("family") GLMFamily var3, @Field("tweedie_variance_power") double var4, @Field("tweedie_link_power") double var6, @Field("solver") GLMSolver var8, @Field("alpha") double[] var9, @Field("lambda") double[] var10, @Field("lambda_search") boolean var11, @Field("early_stopping") boolean var12, @Field("nlambdas") int var13, @Field("standardize") boolean var14, @Field("missing_values_handling") DeepLearningMissingValuesHandling var15, @Field("non_negative") boolean var16, @Field("max_iterations") int var17, @Field("beta_epsilon") double var18, @Field("objective_epsilon") double var20, @Field("gradient_epsilon") double var22, @Field("obj_reg") double var24, @Field("link") GLMLink var26, @Field("intercept") boolean var27, @Field("prior") double var28, @Field("lambda_min_ratio") double var30, @Field("beta_constraints") String var32, @Field("max_active_predictors") int var33, @Field("interactions") String[] var34, @Field("interaction_pairs") StringPairV3[] var35, @Field("balance_classes") boolean var36, @Field("class_sampling_factors") float[] var37, @Field("max_after_balance_size") float var38, @Field("max_confusion_matrix_size") int var39, @Field("max_hit_ratio_k") int var40, @Field("compute_p_values") boolean var41, @Field("remove_collinear_columns") boolean var42, @Field("model_id") String var43, @Field("training_frame") String var44, @Field("validation_frame") String var45, @Field("nfolds") int var46, @Field("keep_cross_validation_predictions") boolean var47, @Field("keep_cross_validation_fold_assignment") boolean var48, @Field("parallelize_cross_validation") boolean var49, @Field("distribution") GenmodelutilsDistributionFamily var50, @Field("tweedie_power") double var51, @Field("quantile_alpha") double var53, @Field("huber_alpha") double var55, @Field("response_column") String var57, @Field("weights_column") String var58, @Field("offset_column") String var59, @Field("fold_column") String var60, @Field("fold_assignment") ModelParametersFoldAssignmentScheme var61, @Field("categorical_encoding") ModelParametersCategoricalEncodingScheme var62, @Field("max_categorical_levels") int var63, @Field("ignored_columns") String[] var64, @Field("ignore_const_cols") boolean var65, @Field("score_each_iteration") boolean var66, @Field("checkpoint") String var67, @Field("stopping_rounds") int var68, @Field("max_runtime_secs") double var69, @Field("stopping_metric") ScoreKeeperStoppingMetric var71, @Field("stopping_tolerance") double var72, @Field("custom_metric_func") String var74);

    @FormUrlEncoded
    @POST("/99/Grid/glrm")
    Call<GridSearchSchema> trainGlrm(@Field("hyper_parameters") String hyperParameters, @Field("search_criteria") String searchCriteria, @Field("transform") DataInfoTransformType var1, @Field("k") int var2, @Field("loss") GenmodelalgosglrmGlrmLoss var3, @Field("multi_loss") GenmodelalgosglrmGlrmLoss var4, @Field("loss_by_col") GenmodelalgosglrmGlrmLoss[] var5, @Field("loss_by_col_idx") int[] var6, @Field("period") int var7, @Field("regularization_x") GenmodelalgosglrmGlrmRegularizer var8, @Field("regularization_y") GenmodelalgosglrmGlrmRegularizer var9, @Field("gamma_x") double var10, @Field("gamma_y") double var12, @Field("max_iterations") int var14, @Field("max_updates") int var15, @Field("init_step_size") double var16, @Field("min_step_size") double var18, @Field("seed") long var20, @Field("init") GenmodelalgosglrmGlrmInitialization var22, @Field("svd_method") SVDMethod var23, @Field("user_y") String var24, @Field("user_x") String var25, @Field("loading_name") String var26, @Field("expand_user_y") boolean var27, @Field("impute_original") boolean var28, @Field("recover_svd") boolean var29, @Field("model_id") String var30, @Field("training_frame") String var31, @Field("validation_frame") String var32, @Field("nfolds") int var33, @Field("keep_cross_validation_predictions") boolean var34, @Field("keep_cross_validation_fold_assignment") boolean var35, @Field("parallelize_cross_validation") boolean var36, @Field("distribution") GenmodelutilsDistributionFamily var37, @Field("tweedie_power") double var38, @Field("quantile_alpha") double var40, @Field("huber_alpha") double var42, @Field("response_column") String var44, @Field("weights_column") String var45, @Field("offset_column") String var46, @Field("fold_column") String var47, @Field("fold_assignment") ModelParametersFoldAssignmentScheme var48, @Field("categorical_encoding") ModelParametersCategoricalEncodingScheme var49, @Field("max_categorical_levels") int var50, @Field("ignored_columns") String[] var51, @Field("ignore_const_cols") boolean var52, @Field("score_each_iteration") boolean var53, @Field("checkpoint") String var54, @Field("stopping_rounds") int var55, @Field("max_runtime_secs") double var56, @Field("stopping_metric") ScoreKeeperStoppingMetric var58, @Field("stopping_tolerance") double var59, @Field("custom_metric_func") String var61);

    @FormUrlEncoded
    @POST("/99/Grid/kmeans")
    Call<GridSearchSchema> trainKmeans(@Field("hyper_parameters") String hyperParameters, @Field("search_criteria") String searchCriteria, @Field("user_points") String var1, @Field("max_iterations") int var2, @Field("standardize") boolean var3, @Field("seed") long var4, @Field("init") KMeansInitialization var6, @Field("estimate_k") boolean var7, @Field("k") int var8, @Field("model_id") String var9, @Field("training_frame") String var10, @Field("validation_frame") String var11, @Field("nfolds") int var12, @Field("keep_cross_validation_predictions") boolean var13, @Field("keep_cross_validation_fold_assignment") boolean var14, @Field("parallelize_cross_validation") boolean var15, @Field("distribution") GenmodelutilsDistributionFamily var16, @Field("tweedie_power") double var17, @Field("quantile_alpha") double var19, @Field("huber_alpha") double var21, @Field("response_column") String var23, @Field("weights_column") String var24, @Field("offset_column") String var25, @Field("fold_column") String var26, @Field("fold_assignment") ModelParametersFoldAssignmentScheme var27, @Field("categorical_encoding") ModelParametersCategoricalEncodingScheme var28, @Field("max_categorical_levels") int var29, @Field("ignored_columns") String[] var30, @Field("ignore_const_cols") boolean var31, @Field("score_each_iteration") boolean var32, @Field("checkpoint") String var33, @Field("stopping_rounds") int var34, @Field("max_runtime_secs") double var35, @Field("stopping_metric") ScoreKeeperStoppingMetric var37, @Field("stopping_tolerance") double var38, @Field("custom_metric_func") String var40);

    @FormUrlEncoded
    @POST("/99/Grid/naivebayes")
    Call<GridSearchSchema> trainNaivebayes(@Field("hyper_parameters") String hyperParameters, @Field("search_criteria") String searchCriteria, @Field("balance_classes") boolean var1, @Field("class_sampling_factors") float[] var2, @Field("max_after_balance_size") float var3, @Field("max_confusion_matrix_size") int var4, @Field("max_hit_ratio_k") int var5, @Field("laplace") double var6, @Field("min_sdev") double var8, @Field("eps_sdev") double var10, @Field("min_prob") double var12, @Field("eps_prob") double var14, @Field("compute_metrics") boolean var16, @Field("seed") long var17, @Field("model_id") String var19, @Field("training_frame") String var20, @Field("validation_frame") String var21, @Field("nfolds") int var22, @Field("keep_cross_validation_predictions") boolean var23, @Field("keep_cross_validation_fold_assignment") boolean var24, @Field("parallelize_cross_validation") boolean var25, @Field("distribution") GenmodelutilsDistributionFamily var26, @Field("tweedie_power") double var27, @Field("quantile_alpha") double var29, @Field("huber_alpha") double var31, @Field("response_column") String var33, @Field("weights_column") String var34, @Field("offset_column") String var35, @Field("fold_column") String var36, @Field("fold_assignment") ModelParametersFoldAssignmentScheme var37, @Field("categorical_encoding") ModelParametersCategoricalEncodingScheme var38, @Field("max_categorical_levels") int var39, @Field("ignored_columns") String[] var40, @Field("ignore_const_cols") boolean var41, @Field("score_each_iteration") boolean var42, @Field("checkpoint") String var43, @Field("stopping_rounds") int var44, @Field("max_runtime_secs") double var45, @Field("stopping_metric") ScoreKeeperStoppingMetric var47, @Field("stopping_tolerance") double var48, @Field("custom_metric_func") String var50);

    @FormUrlEncoded
    @POST("/99/Grid/pca")
    Call<GridSearchSchema> trainPca(@Field("hyper_parameters") String hyperParameters, @Field("search_criteria") String searchCriteria, @Field("transform") DataInfoTransformType var1, @Field("pca_method") PCAMethod var2, @Field("pca_impl") PCAImplementation var3, @Field("k") int var4, @Field("max_iterations") int var5, @Field("seed") long var6, @Field("use_all_factor_levels") boolean var8, @Field("compute_metrics") boolean var9, @Field("impute_missing") boolean var10, @Field("model_id") String var11, @Field("training_frame") String var12, @Field("validation_frame") String var13, @Field("nfolds") int var14, @Field("keep_cross_validation_predictions") boolean var15, @Field("keep_cross_validation_fold_assignment") boolean var16, @Field("parallelize_cross_validation") boolean var17, @Field("distribution") GenmodelutilsDistributionFamily var18, @Field("tweedie_power") double var19, @Field("quantile_alpha") double var21, @Field("huber_alpha") double var23, @Field("response_column") String var25, @Field("weights_column") String var26, @Field("offset_column") String var27, @Field("fold_column") String var28, @Field("fold_assignment") ModelParametersFoldAssignmentScheme var29, @Field("categorical_encoding") ModelParametersCategoricalEncodingScheme var30, @Field("max_categorical_levels") int var31, @Field("ignored_columns") String[] var32, @Field("ignore_const_cols") boolean var33, @Field("score_each_iteration") boolean var34, @Field("checkpoint") String var35, @Field("stopping_rounds") int var36, @Field("max_runtime_secs") double var37, @Field("stopping_metric") ScoreKeeperStoppingMetric var39, @Field("stopping_tolerance") double var40, @Field("custom_metric_func") String var42);

    @FormUrlEncoded
    @POST("/99/Grid/svd")
    Call<GridSearchSchema> trainSvd(@Field("hyper_parameters") String hyperParameters, @Field("search_criteria") String searchCriteria, @Field("transform") DataInfoTransformType var1, @Field("svd_method") SVDMethod var2, @Field("nv") int var3, @Field("max_iterations") int var4, @Field("seed") long var5, @Field("keep_u") boolean var7, @Field("u_name") String var8, @Field("use_all_factor_levels") boolean var9, @Field("model_id") String var10, @Field("training_frame") String var11, @Field("validation_frame") String var12, @Field("nfolds") int var13, @Field("keep_cross_validation_predictions") boolean var14, @Field("keep_cross_validation_fold_assignment") boolean var15, @Field("parallelize_cross_validation") boolean var16, @Field("distribution") GenmodelutilsDistributionFamily var17, @Field("tweedie_power") double var18, @Field("quantile_alpha") double var20, @Field("huber_alpha") double var22, @Field("response_column") String var24, @Field("weights_column") String var25, @Field("offset_column") String var26, @Field("fold_column") String var27, @Field("fold_assignment") ModelParametersFoldAssignmentScheme var28, @Field("categorical_encoding") ModelParametersCategoricalEncodingScheme var29, @Field("max_categorical_levels") int var30, @Field("ignored_columns") String[] var31, @Field("ignore_const_cols") boolean var32, @Field("score_each_iteration") boolean var33, @Field("checkpoint") String var34, @Field("stopping_rounds") int var35, @Field("max_runtime_secs") double var36, @Field("stopping_metric") ScoreKeeperStoppingMetric var38, @Field("stopping_tolerance") double var39, @Field("custom_metric_func") String var41);

    @FormUrlEncoded
    @POST("/99/Grid/drf")
    Call<GridSearchSchema> trainDrf(@Field("hyper_parameters") String hyperParameters, @Field("search_criteria") String searchCriteria, @Field("mtries") int var1, @Field("binomial_double_trees") boolean var2, @Field("balance_classes") boolean var3, @Field("class_sampling_factors") float[] var4, @Field("max_after_balance_size") float var5, @Field("max_confusion_matrix_size") int var6, @Field("max_hit_ratio_k") int var7, @Field("ntrees") int var8, @Field("max_depth") int var9, @Field("min_rows") double var10, @Field("nbins") int var12, @Field("nbins_top_level") int var13, @Field("nbins_cats") int var14, @Field("r2_stopping") double var15, @Field("seed") long var17, @Field("build_tree_one_node") boolean var19, @Field("sample_rate") double var20, @Field("sample_rate_per_class") double[] var22, @Field("col_sample_rate_per_tree") double var23, @Field("col_sample_rate_change_per_level") double var25, @Field("score_tree_interval") int var27, @Field("min_split_improvement") double var28, @Field("histogram_type") TreeSharedTreeModelSharedTreeParametersHistogramType var30, @Field("calibrate_model") boolean var31, @Field("calibration_frame") String var32, @Field("model_id") String var33, @Field("training_frame") String var34, @Field("validation_frame") String var35, @Field("nfolds") int var36, @Field("keep_cross_validation_predictions") boolean var37, @Field("keep_cross_validation_fold_assignment") boolean var38, @Field("parallelize_cross_validation") boolean var39, @Field("distribution") GenmodelutilsDistributionFamily var40, @Field("tweedie_power") double var41, @Field("quantile_alpha") double var43, @Field("huber_alpha") double var45, @Field("response_column") String var47, @Field("weights_column") String var48, @Field("offset_column") String var49, @Field("fold_column") String var50, @Field("fold_assignment") ModelParametersFoldAssignmentScheme var51, @Field("categorical_encoding") ModelParametersCategoricalEncodingScheme var52, @Field("max_categorical_levels") int var53, @Field("ignored_columns") String[] var54, @Field("ignore_const_cols") boolean var55, @Field("score_each_iteration") boolean var56, @Field("checkpoint") String var57, @Field("stopping_rounds") int var58, @Field("max_runtime_secs") double var59, @Field("stopping_metric") ScoreKeeperStoppingMetric var61, @Field("stopping_tolerance") double var62, @Field("custom_metric_func") String var64);

    @FormUrlEncoded
    @POST("/99/Grid/gbm")
    Call<GridSearchSchema> trainGbm(@Field("hyper_parameters") String hyperParameters, @Field("search_criteria") String searchCriteria, @Field("learn_rate") double var1, @Field("learn_rate_annealing") double var3, @Field("col_sample_rate") double var5, @Field("max_abs_leafnode_pred") double var7, @Field("pred_noise_bandwidth") double var9, @Field("balance_classes") boolean var11, @Field("class_sampling_factors") float[] var12, @Field("max_after_balance_size") float var13, @Field("max_confusion_matrix_size") int var14, @Field("max_hit_ratio_k") int var15, @Field("ntrees") int var16, @Field("max_depth") int var17, @Field("min_rows") double var18, @Field("nbins") int var20, @Field("nbins_top_level") int var21, @Field("nbins_cats") int var22, @Field("r2_stopping") double var23, @Field("seed") long var25, @Field("build_tree_one_node") boolean var27, @Field("sample_rate") double var28, @Field("sample_rate_per_class") double[] var30, @Field("col_sample_rate_per_tree") double var31, @Field("col_sample_rate_change_per_level") double var33, @Field("score_tree_interval") int var35, @Field("min_split_improvement") double var36, @Field("histogram_type") TreeSharedTreeModelSharedTreeParametersHistogramType var38, @Field("calibrate_model") boolean var39, @Field("calibration_frame") String var40, @Field("model_id") String var41, @Field("training_frame") String var42, @Field("validation_frame") String var43, @Field("nfolds") int var44, @Field("keep_cross_validation_predictions") boolean var45, @Field("keep_cross_validation_fold_assignment") boolean var46, @Field("parallelize_cross_validation") boolean var47, @Field("distribution") GenmodelutilsDistributionFamily var48, @Field("tweedie_power") double var49, @Field("quantile_alpha") double var51, @Field("huber_alpha") double var53, @Field("response_column") String var55, @Field("weights_column") String var56, @Field("offset_column") String var57, @Field("fold_column") String var58, @Field("fold_assignment") ModelParametersFoldAssignmentScheme var59, @Field("categorical_encoding") ModelParametersCategoricalEncodingScheme var60, @Field("max_categorical_levels") int var61, @Field("ignored_columns") String[] var62, @Field("ignore_const_cols") boolean var63, @Field("score_each_iteration") boolean var64, @Field("checkpoint") String var65, @Field("stopping_rounds") int var66, @Field("max_runtime_secs") double var67, @Field("stopping_metric") ScoreKeeperStoppingMetric var69, @Field("stopping_tolerance") double var70, @Field("custom_metric_func") String var72);

    @FormUrlEncoded
    @POST("/99/Grid/aggregator")
    Call<GridSearchSchema> trainAggregator(@Field("hyper_parameters") String hyperParameters, @Field("search_criteria") String searchCriteria, @Field("transform") DataInfoTransformType var1, @Field("pca_method") PCAMethod var2, @Field("k") int var3, @Field("max_iterations") int var4, @Field("target_num_exemplars") int var5, @Field("rel_tol_num_exemplars") double var6, @Field("seed") long var8, @Field("use_all_factor_levels") boolean var10, @Field("save_mapping_frame") boolean var11, @Field("num_iteration_without_new_exemplar") int var12, @Field("model_id") String var13, @Field("training_frame") String var14, @Field("validation_frame") String var15, @Field("nfolds") int var16, @Field("keep_cross_validation_predictions") boolean var17, @Field("keep_cross_validation_fold_assignment") boolean var18, @Field("parallelize_cross_validation") boolean var19, @Field("distribution") GenmodelutilsDistributionFamily var20, @Field("tweedie_power") double var21, @Field("quantile_alpha") double var23, @Field("huber_alpha") double var25, @Field("response_column") String var27, @Field("weights_column") String var28, @Field("offset_column") String var29, @Field("fold_column") String var30, @Field("fold_assignment") ModelParametersFoldAssignmentScheme var31, @Field("categorical_encoding") ModelParametersCategoricalEncodingScheme var32, @Field("max_categorical_levels") int var33, @Field("ignored_columns") String[] var34, @Field("ignore_const_cols") boolean var35, @Field("score_each_iteration") boolean var36, @Field("checkpoint") String var37, @Field("stopping_rounds") int var38, @Field("max_runtime_secs") double var39, @Field("stopping_metric") ScoreKeeperStoppingMetric var41, @Field("stopping_tolerance") double var42, @Field("custom_metric_func") String var44);

    @FormUrlEncoded
    @POST("/99/Grid/deepwater")
    Call<GridSearchSchema> trainDeepwater(@Field("hyper_parameters") String hyperParameters, @Field("search_criteria") String searchCriteria, @Field("problem_type") DeepWaterParametersProblemType var1, @Field("activation") DeepWaterParametersActivation var2, @Field("hidden") int[] var3, @Field("input_dropout_ratio") double var4, @Field("hidden_dropout_ratios") double[] var6, @Field("max_confusion_matrix_size") int var7, @Field("sparse") boolean var8, @Field("max_hit_ratio_k") int var9, @Field("epochs") double var10, @Field("train_samples_per_iteration") long var12, @Field("target_ratio_comm_to_comp") double var14, @Field("seed") long var16, @Field("learning_rate") double var18, @Field("learning_rate_annealing") double var20, @Field("momentum_start") double var22, @Field("momentum_ramp") double var24, @Field("momentum_stable") double var26, @Field("score_interval") double var28, @Field("score_training_samples") long var30, @Field("score_validation_samples") long var32, @Field("score_duty_cycle") double var34, @Field("classification_stop") double var36, @Field("regression_stop") double var38, @Field("quiet_mode") boolean var40, @Field("overwrite_with_best_model") boolean var41, @Field("autoencoder") boolean var42, @Field("diagnostics") boolean var43, @Field("variable_importances") boolean var44, @Field("replicate_training_data") boolean var45, @Field("single_node_mode") boolean var46, @Field("shuffle_training_data") boolean var47, @Field("mini_batch_size") int var48, @Field("clip_gradient") double var49, @Field("network") DeepWaterParametersNetwork var51, @Field("backend") DeepWaterParametersBackend var52, @Field("image_shape") int[] var53, @Field("channels") int var54, @Field("gpu") boolean var55, @Field("device_id") int[] var56, @Field("cache_data") boolean var57, @Field("network_definition_file") String var58, @Field("network_parameters_file") String var59, @Field("mean_image_file") String var60, @Field("export_native_parameters_prefix") String var61, @Field("standardize") boolean var62, @Field("balance_classes") boolean var63, @Field("class_sampling_factors") float[] var64, @Field("max_after_balance_size") float var65, @Field("model_id") String var66, @Field("training_frame") String var67, @Field("validation_frame") String var68, @Field("nfolds") int var69, @Field("keep_cross_validation_predictions") boolean var70, @Field("keep_cross_validation_fold_assignment") boolean var71, @Field("parallelize_cross_validation") boolean var72, @Field("distribution") GenmodelutilsDistributionFamily var73, @Field("tweedie_power") double var74, @Field("quantile_alpha") double var76, @Field("huber_alpha") double var78, @Field("response_column") String var80, @Field("weights_column") String var81, @Field("offset_column") String var82, @Field("fold_column") String var83, @Field("fold_assignment") ModelParametersFoldAssignmentScheme var84, @Field("categorical_encoding") ModelParametersCategoricalEncodingScheme var85, @Field("max_categorical_levels") int var86, @Field("ignored_columns") String[] var87, @Field("ignore_const_cols") boolean var88, @Field("score_each_iteration") boolean var89, @Field("checkpoint") String var90, @Field("stopping_rounds") int var91, @Field("max_runtime_secs") double var92, @Field("stopping_metric") ScoreKeeperStoppingMetric var94, @Field("stopping_tolerance") double var95, @Field("custom_metric_func") String var97);

    @FormUrlEncoded
    @POST("/99/Grid/word2vec")
    Call<GridSearchSchema> trainWord2vec(@Field("hyper_parameters") String hyperParameters, @Field("search_criteria") String searchCriteria, @Field("vec_size") int var1, @Field("window_size") int var2, @Field("sent_sample_rate") float var3, @Field("norm_model") Word2VecNormModel var4, @Field("epochs") int var5, @Field("min_word_freq") int var6, @Field("init_learning_rate") float var7, @Field("word_model") Word2VecWordModel var8, @Field("pre_trained") String var9, @Field("model_id") String var10, @Field("training_frame") String var11, @Field("validation_frame") String var12, @Field("nfolds") int var13, @Field("keep_cross_validation_predictions") boolean var14, @Field("keep_cross_validation_fold_assignment") boolean var15, @Field("parallelize_cross_validation") boolean var16, @Field("distribution") GenmodelutilsDistributionFamily var17, @Field("tweedie_power") double var18, @Field("quantile_alpha") double var20, @Field("huber_alpha") double var22, @Field("response_column") String var24, @Field("weights_column") String var25, @Field("offset_column") String var26, @Field("fold_column") String var27, @Field("fold_assignment") ModelParametersFoldAssignmentScheme var28, @Field("categorical_encoding") ModelParametersCategoricalEncodingScheme var29, @Field("max_categorical_levels") int var30, @Field("ignored_columns") String[] var31, @Field("ignore_const_cols") boolean var32, @Field("score_each_iteration") boolean var33, @Field("checkpoint") String var34, @Field("stopping_rounds") int var35, @Field("max_runtime_secs") double var36, @Field("stopping_metric") ScoreKeeperStoppingMetric var38, @Field("stopping_tolerance") double var39, @Field("custom_metric_func") String var41);

    @FormUrlEncoded
    @POST("/99/Grid/stackedensemble")
    Call<GridSearchSchema> trainStackedensemble(@Field("hyper_parameters") String hyperParameters, @Field("search_criteria") String searchCriteria, @Field("base_models") String[] var1, @Field("metalearner_algorithm") StackedEnsembleModelStackedEnsembleParametersMetalearnerAlgorithm var2, @Field("metalearner_nfolds") int var3, @Field("metalearner_fold_assignment") ModelParametersFoldAssignmentScheme var4, @Field("metalearner_fold_column") String var5, @Field("keep_levelone_frame") boolean var6, @Field("metalearner_params") String var7, @Field("seed") long var8, @Field("model_id") String var10, @Field("training_frame") String var11, @Field("validation_frame") String var12, @Field("nfolds") int var13, @Field("keep_cross_validation_predictions") boolean var14, @Field("keep_cross_validation_fold_assignment") boolean var15, @Field("parallelize_cross_validation") boolean var16, @Field("distribution") GenmodelutilsDistributionFamily var17, @Field("tweedie_power") double var18, @Field("quantile_alpha") double var20, @Field("huber_alpha") double var22, @Field("response_column") String var24, @Field("weights_column") String var25, @Field("offset_column") String var26, @Field("fold_column") String var27, @Field("fold_assignment") ModelParametersFoldAssignmentScheme var28, @Field("categorical_encoding") ModelParametersCategoricalEncodingScheme var29, @Field("max_categorical_levels") int var30, @Field("ignored_columns") String[] var31, @Field("ignore_const_cols") boolean var32, @Field("score_each_iteration") boolean var33, @Field("checkpoint") String var34, @Field("stopping_rounds") int var35, @Field("max_runtime_secs") double var36, @Field("stopping_metric") ScoreKeeperStoppingMetric var38, @Field("stopping_tolerance") double var39, @Field("custom_metric_func") String var41);

    @FormUrlEncoded
    @POST("/99/Grid/coxph")
    Call<GridSearchSchema> trainCoxph(@Field("hyper_parameters") String hyperParameters, @Field("search_criteria") String searchCriteria, @Field("start_column") String var1, @Field("stop_column") String var2, @Field("stratify_by") String[] var3, @Field("ties") CoxPHTies var4, @Field("init") double var5, @Field("lre_min") double var7, @Field("max_iterations") int var9, @Field("interactions_only") String[] var10, @Field("interactions") String[] var11, @Field("interaction_pairs") StringPairV3[] var12, @Field("use_all_factor_levels") boolean var13, @Field("model_id") String var14, @Field("training_frame") String var15, @Field("validation_frame") String var16, @Field("nfolds") int var17, @Field("keep_cross_validation_predictions") boolean var18, @Field("keep_cross_validation_fold_assignment") boolean var19, @Field("parallelize_cross_validation") boolean var20, @Field("distribution") GenmodelutilsDistributionFamily var21, @Field("tweedie_power") double var22, @Field("quantile_alpha") double var24, @Field("huber_alpha") double var26, @Field("response_column") String var28, @Field("weights_column") String var29, @Field("offset_column") String var30, @Field("fold_column") String var31, @Field("fold_assignment") ModelParametersFoldAssignmentScheme var32, @Field("categorical_encoding") ModelParametersCategoricalEncodingScheme var33, @Field("max_categorical_levels") int var34, @Field("ignored_columns") String[] var35, @Field("ignore_const_cols") boolean var36, @Field("score_each_iteration") boolean var37, @Field("checkpoint") String var38, @Field("stopping_rounds") int var39, @Field("max_runtime_secs") double var40, @Field("stopping_metric") ScoreKeeperStoppingMetric var42, @Field("stopping_tolerance") double var43, @Field("custom_metric_func") String var45);

    class Helper {
        public Helper() {
        }

        public static Call<GridSearchSchema> trainXgboost(GridSearch z, String hyperParams, String searchCriteria, XGBoostParametersV3 p) {
            return z.trainXgboost(hyperParams, searchCriteria, p.ntrees, p.nEstimators, p.maxDepth, p.minRows, p.minChildWeight, p.learnRate, p.eta, p.sampleRate, p.subsample, p.colSampleRate, p.colsampleBylevel, p.colSampleRatePerTree, p.colsampleBytree, p.maxAbsLeafnodePred, p.maxDeltaStep, p.scoreTreeInterval, p.seed, p.minSplitImprovement, p.gamma, p.nthread, p.maxBins, p.maxLeaves, p.minSumHessianInLeaf, p.minDataInLeaf, p.treeMethod, p.growPolicy, p.booster, p.regLambda, p.regAlpha, p.quietMode, p.sampleType, p.normalizeType, p.rateDrop, p.oneDrop, p.skipDrop, p.dmatrixType, p.backend, p.gpuId, p.modelId == null ? null : p.modelId.name, p.trainingFrame == null ? null : p.trainingFrame.name, p.validationFrame == null ? null : p.validationFrame.name, p.nfolds, p.keepCrossValidationPredictions, p.keepCrossValidationFoldAssignment, p.parallelizeCrossValidation, p.distribution, p.tweediePower, p.quantileAlpha, p.huberAlpha, p.responseColumn == null ? null : p.responseColumn.columnName, p.weightsColumn == null ? null : p.weightsColumn.columnName, p.offsetColumn == null ? null : p.offsetColumn.columnName, p.foldColumn == null ? null : p.foldColumn.columnName, p.foldAssignment, p.categoricalEncoding, p.maxCategoricalLevels, p.ignoredColumns, p.ignoreConstCols, p.scoreEachIteration, p.checkpoint == null ? null : p.checkpoint.name, p.stoppingRounds, p.maxRuntimeSecs, p.stoppingMetric, p.stoppingTolerance, p.customMetricFunc);
        }

        public static Call<GridSearchSchema> trainDeeplearning(GridSearch z, String hyperParams, String searchCriteria, DeepLearningParametersV3 p) {
            return z.trainDeeplearning(hyperParams, searchCriteria, p.balanceClasses, p.classSamplingFactors, p.maxAfterBalanceSize, p.maxConfusionMatrixSize, p.maxHitRatioK, p.activation, p.hidden, p.epochs, p.trainSamplesPerIteration, p.targetRatioCommToComp, p.seed, p.adaptiveRate, p.rho, p.epsilon, p.rate, p.rateAnnealing, p.rateDecay, p.momentumStart, p.momentumRamp, p.momentumStable, p.nesterovAcceleratedGradient, p.inputDropoutRatio, p.hiddenDropoutRatios, p.l1, p.l2, p.maxW2, p.initialWeightDistribution, p.initialWeightScale, p.initialWeights == null ? null : keyArrayToStringArray(p.initialWeights), p.initialBiases == null ? null : keyArrayToStringArray(p.initialBiases), p.loss, p.scoreInterval, p.scoreTrainingSamples, p.scoreValidationSamples, p.scoreDutyCycle, p.classificationStop, p.regressionStop, p.quietMode, p.scoreValidationSampling, p.overwriteWithBestModel, p.autoencoder, p.useAllFactorLevels, p.standardize, p.diagnostics, p.variableImportances, p.fastMode, p.forceLoadBalance, p.replicateTrainingData, p.singleNodeMode, p.shuffleTrainingData, p.missingValuesHandling, p.sparse, p.colMajor, p.averageActivation, p.sparsityBeta, p.maxCategoricalFeatures, p.reproducible, p.exportWeightsAndBiases, p.miniBatchSize, p.elasticAveraging, p.elasticAveragingMovingRate, p.elasticAveragingRegularization, p.pretrainedAutoencoder == null ? null : p.pretrainedAutoencoder.name, p.modelId == null ? null : p.modelId.name, p.trainingFrame == null ? null : p.trainingFrame.name, p.validationFrame == null ? null : p.validationFrame.name, p.nfolds, p.keepCrossValidationPredictions, p.keepCrossValidationFoldAssignment, p.parallelizeCrossValidation, p.distribution, p.tweediePower, p.quantileAlpha, p.huberAlpha, p.responseColumn == null ? null : p.responseColumn.columnName, p.weightsColumn == null ? null : p.weightsColumn.columnName, p.offsetColumn == null ? null : p.offsetColumn.columnName, p.foldColumn == null ? null : p.foldColumn.columnName, p.foldAssignment, p.categoricalEncoding, p.maxCategoricalLevels, p.ignoredColumns, p.ignoreConstCols, p.scoreEachIteration, p.checkpoint == null ? null : p.checkpoint.name, p.stoppingRounds, p.maxRuntimeSecs, p.stoppingMetric, p.stoppingTolerance, p.customMetricFunc);
        }

        public static Call<GridSearchSchema> trainGlm(GridSearch z, String hyperParams, String searchCriteria, GLMParametersV3 p) {
            return z.trainGlm(hyperParams, searchCriteria, p.seed, p.family, p.tweedieVariancePower, p.tweedieLinkPower, p.solver, p.alpha, p.lambda, p.lambdaSearch, p.earlyStopping, p.nlambdas, p.standardize, p.missingValuesHandling, p.nonNegative, p.maxIterations, p.betaEpsilon, p.objectiveEpsilon, p.gradientEpsilon, p.objReg, p.link, p.intercept, p.prior, p.lambdaMinRatio, p.betaConstraints == null ? null : p.betaConstraints.name, p.maxActivePredictors, p.interactions, p.interactionPairs, p.balanceClasses, p.classSamplingFactors, p.maxAfterBalanceSize, p.maxConfusionMatrixSize, p.maxHitRatioK, p.computePValues, p.removeCollinearColumns, p.modelId == null ? null : p.modelId.name, p.trainingFrame == null ? null : p.trainingFrame.name, p.validationFrame == null ? null : p.validationFrame.name, p.nfolds, p.keepCrossValidationPredictions, p.keepCrossValidationFoldAssignment, p.parallelizeCrossValidation, p.distribution, p.tweediePower, p.quantileAlpha, p.huberAlpha, p.responseColumn == null ? null : p.responseColumn.columnName, p.weightsColumn == null ? null : p.weightsColumn.columnName, p.offsetColumn == null ? null : p.offsetColumn.columnName, p.foldColumn == null ? null : p.foldColumn.columnName, p.foldAssignment, p.categoricalEncoding, p.maxCategoricalLevels, p.ignoredColumns, p.ignoreConstCols, p.scoreEachIteration, p.checkpoint == null ? null : p.checkpoint.name, p.stoppingRounds, p.maxRuntimeSecs, p.stoppingMetric, p.stoppingTolerance, p.customMetricFunc);
        }

        public static Call<GridSearchSchema> trainGlrm(GridSearch z, String hyperParams, String searchCriteria, GLRMParametersV3 p) {
            return z.trainGlrm(hyperParams, searchCriteria, p.transform, p.k, p.loss, p.multiLoss, p.lossByCol, p.lossByColIdx, p.period, p.regularizationX, p.regularizationY, p.gammaX, p.gammaY, p.maxIterations, p.maxUpdates, p.initStepSize, p.minStepSize, p.seed, p.init, p.svdMethod, p.userY == null ? null : p.userY.name, p.userX == null ? null : p.userX.name, p.loadingName, p.expandUserY, p.imputeOriginal, p.recoverSvd, p.modelId == null ? null : p.modelId.name, p.trainingFrame == null ? null : p.trainingFrame.name, p.validationFrame == null ? null : p.validationFrame.name, p.nfolds, p.keepCrossValidationPredictions, p.keepCrossValidationFoldAssignment, p.parallelizeCrossValidation, p.distribution, p.tweediePower, p.quantileAlpha, p.huberAlpha, p.responseColumn == null ? null : p.responseColumn.columnName, p.weightsColumn == null ? null : p.weightsColumn.columnName, p.offsetColumn == null ? null : p.offsetColumn.columnName, p.foldColumn == null ? null : p.foldColumn.columnName, p.foldAssignment, p.categoricalEncoding, p.maxCategoricalLevels, p.ignoredColumns, p.ignoreConstCols, p.scoreEachIteration, p.checkpoint == null ? null : p.checkpoint.name, p.stoppingRounds, p.maxRuntimeSecs, p.stoppingMetric, p.stoppingTolerance, p.customMetricFunc);
        }

        public static Call<GridSearchSchema> trainKmeans(GridSearch z, String hyperParams, String searchCriteria, KMeansParametersV3 p) {
            return z.trainKmeans(hyperParams, searchCriteria, p.userPoints == null ? null : p.userPoints.name, p.maxIterations, p.standardize, p.seed, p.init, p.estimateK, p.k, p.modelId == null ? null : p.modelId.name, p.trainingFrame == null ? null : p.trainingFrame.name, p.validationFrame == null ? null : p.validationFrame.name, p.nfolds, p.keepCrossValidationPredictions, p.keepCrossValidationFoldAssignment, p.parallelizeCrossValidation, p.distribution, p.tweediePower, p.quantileAlpha, p.huberAlpha, p.responseColumn == null ? null : p.responseColumn.columnName, p.weightsColumn == null ? null : p.weightsColumn.columnName, p.offsetColumn == null ? null : p.offsetColumn.columnName, p.foldColumn == null ? null : p.foldColumn.columnName, p.foldAssignment, p.categoricalEncoding, p.maxCategoricalLevels, p.ignoredColumns, p.ignoreConstCols, p.scoreEachIteration, p.checkpoint == null ? null : p.checkpoint.name, p.stoppingRounds, p.maxRuntimeSecs, p.stoppingMetric, p.stoppingTolerance, p.customMetricFunc);
        }

        public static Call<GridSearchSchema> trainNaivebayes(GridSearch z, String hyperParams, String searchCriteria, NaiveBayesParametersV3 p) {
            return z.trainNaivebayes(hyperParams, searchCriteria, p.balanceClasses, p.classSamplingFactors, p.maxAfterBalanceSize, p.maxConfusionMatrixSize, p.maxHitRatioK, p.laplace, p.minSdev, p.epsSdev, p.minProb, p.epsProb, p.computeMetrics, p.seed, p.modelId == null ? null : p.modelId.name, p.trainingFrame == null ? null : p.trainingFrame.name, p.validationFrame == null ? null : p.validationFrame.name, p.nfolds, p.keepCrossValidationPredictions, p.keepCrossValidationFoldAssignment, p.parallelizeCrossValidation, p.distribution, p.tweediePower, p.quantileAlpha, p.huberAlpha, p.responseColumn == null ? null : p.responseColumn.columnName, p.weightsColumn == null ? null : p.weightsColumn.columnName, p.offsetColumn == null ? null : p.offsetColumn.columnName, p.foldColumn == null ? null : p.foldColumn.columnName, p.foldAssignment, p.categoricalEncoding, p.maxCategoricalLevels, p.ignoredColumns, p.ignoreConstCols, p.scoreEachIteration, p.checkpoint == null ? null : p.checkpoint.name, p.stoppingRounds, p.maxRuntimeSecs, p.stoppingMetric, p.stoppingTolerance, p.customMetricFunc);
        }

        public static Call<GridSearchSchema> trainPca(GridSearch z, String hyperParams, String searchCriteria, PCAParametersV3 p) {
            return z.trainPca(hyperParams, searchCriteria, p.transform, p.pcaMethod, p.pcaImpl, p.k, p.maxIterations, p.seed, p.useAllFactorLevels, p.computeMetrics, p.imputeMissing, p.modelId == null ? null : p.modelId.name, p.trainingFrame == null ? null : p.trainingFrame.name, p.validationFrame == null ? null : p.validationFrame.name, p.nfolds, p.keepCrossValidationPredictions, p.keepCrossValidationFoldAssignment, p.parallelizeCrossValidation, p.distribution, p.tweediePower, p.quantileAlpha, p.huberAlpha, p.responseColumn == null ? null : p.responseColumn.columnName, p.weightsColumn == null ? null : p.weightsColumn.columnName, p.offsetColumn == null ? null : p.offsetColumn.columnName, p.foldColumn == null ? null : p.foldColumn.columnName, p.foldAssignment, p.categoricalEncoding, p.maxCategoricalLevels, p.ignoredColumns, p.ignoreConstCols, p.scoreEachIteration, p.checkpoint == null ? null : p.checkpoint.name, p.stoppingRounds, p.maxRuntimeSecs, p.stoppingMetric, p.stoppingTolerance, p.customMetricFunc);
        }

        public static Call<GridSearchSchema> trainSvd(GridSearch z, String hyperParams, String searchCriteria, SVDParametersV99 p) {
            return z.trainSvd(hyperParams, searchCriteria, p.transform, p.svdMethod, p.nv, p.maxIterations, p.seed, p.keepU, p.uName, p.useAllFactorLevels, p.modelId == null ? null : p.modelId.name, p.trainingFrame == null ? null : p.trainingFrame.name, p.validationFrame == null ? null : p.validationFrame.name, p.nfolds, p.keepCrossValidationPredictions, p.keepCrossValidationFoldAssignment, p.parallelizeCrossValidation, p.distribution, p.tweediePower, p.quantileAlpha, p.huberAlpha, p.responseColumn == null ? null : p.responseColumn.columnName, p.weightsColumn == null ? null : p.weightsColumn.columnName, p.offsetColumn == null ? null : p.offsetColumn.columnName, p.foldColumn == null ? null : p.foldColumn.columnName, p.foldAssignment, p.categoricalEncoding, p.maxCategoricalLevels, p.ignoredColumns, p.ignoreConstCols, p.scoreEachIteration, p.checkpoint == null ? null : p.checkpoint.name, p.stoppingRounds, p.maxRuntimeSecs, p.stoppingMetric, p.stoppingTolerance, p.customMetricFunc);
        }

        public static Call<GridSearchSchema> trainDrf(GridSearch z, String hyperParams, String searchCriteria, DRFParametersV3 p) {
            return z.trainDrf(hyperParams, searchCriteria, p.mtries, p.binomialDoubleTrees, p.balanceClasses, p.classSamplingFactors, p.maxAfterBalanceSize, p.maxConfusionMatrixSize, p.maxHitRatioK, p.ntrees, p.maxDepth, p.minRows, p.nbins, p.nbinsTopLevel, p.nbinsCats, p.r2Stopping, p.seed, p.buildTreeOneNode, p.sampleRate, p.sampleRatePerClass, p.colSampleRatePerTree, p.colSampleRateChangePerLevel, p.scoreTreeInterval, p.minSplitImprovement, p.histogramType, p.calibrateModel, p.calibrationFrame == null ? null : p.calibrationFrame.name, p.modelId == null ? null : p.modelId.name, p.trainingFrame == null ? null : p.trainingFrame.name, p.validationFrame == null ? null : p.validationFrame.name, p.nfolds, p.keepCrossValidationPredictions, p.keepCrossValidationFoldAssignment, p.parallelizeCrossValidation, p.distribution, p.tweediePower, p.quantileAlpha, p.huberAlpha, p.responseColumn == null ? null : p.responseColumn.columnName, p.weightsColumn == null ? null : p.weightsColumn.columnName, p.offsetColumn == null ? null : p.offsetColumn.columnName, p.foldColumn == null ? null : p.foldColumn.columnName, p.foldAssignment, p.categoricalEncoding, p.maxCategoricalLevels, p.ignoredColumns, p.ignoreConstCols, p.scoreEachIteration, p.checkpoint == null ? null : p.checkpoint.name, p.stoppingRounds, p.maxRuntimeSecs, p.stoppingMetric, p.stoppingTolerance, p.customMetricFunc);
        }

        public static Call<GridSearchSchema> trainGbm(GridSearch z, String hyperParams, String searchCriteria, GBMParametersV3 p) {
            return z.trainGbm(hyperParams, searchCriteria, p.learnRate, p.learnRateAnnealing, p.colSampleRate, p.maxAbsLeafnodePred, p.predNoiseBandwidth, p.balanceClasses, p.classSamplingFactors, p.maxAfterBalanceSize, p.maxConfusionMatrixSize, p.maxHitRatioK, p.ntrees, p.maxDepth, p.minRows, p.nbins, p.nbinsTopLevel, p.nbinsCats, p.r2Stopping, p.seed, p.buildTreeOneNode, p.sampleRate, p.sampleRatePerClass, p.colSampleRatePerTree, p.colSampleRateChangePerLevel, p.scoreTreeInterval, p.minSplitImprovement, p.histogramType, p.calibrateModel, p.calibrationFrame == null ? null : p.calibrationFrame.name, p.modelId == null ? null : p.modelId.name, p.trainingFrame == null ? null : p.trainingFrame.name, p.validationFrame == null ? null : p.validationFrame.name, p.nfolds, p.keepCrossValidationPredictions, p.keepCrossValidationFoldAssignment, p.parallelizeCrossValidation, p.distribution, p.tweediePower, p.quantileAlpha, p.huberAlpha, p.responseColumn == null ? null : p.responseColumn.columnName, p.weightsColumn == null ? null : p.weightsColumn.columnName, p.offsetColumn == null ? null : p.offsetColumn.columnName, p.foldColumn == null ? null : p.foldColumn.columnName, p.foldAssignment, p.categoricalEncoding, p.maxCategoricalLevels, p.ignoredColumns, p.ignoreConstCols, p.scoreEachIteration, p.checkpoint == null ? null : p.checkpoint.name, p.stoppingRounds, p.maxRuntimeSecs, p.stoppingMetric, p.stoppingTolerance, p.customMetricFunc);
        }

        public static Call<GridSearchSchema> trainAggregator(GridSearch z, String hyperParams, String searchCriteria, AggregatorParametersV99 p) {
            return z.trainAggregator(hyperParams, searchCriteria, p.transform, p.pcaMethod, p.k, p.maxIterations, p.targetNumExemplars, p.relTolNumExemplars, p.seed, p.useAllFactorLevels, p.saveMappingFrame, p.numIterationWithoutNewExemplar, p.modelId == null ? null : p.modelId.name, p.trainingFrame == null ? null : p.trainingFrame.name, p.validationFrame == null ? null : p.validationFrame.name, p.nfolds, p.keepCrossValidationPredictions, p.keepCrossValidationFoldAssignment, p.parallelizeCrossValidation, p.distribution, p.tweediePower, p.quantileAlpha, p.huberAlpha, p.responseColumn == null ? null : p.responseColumn.columnName, p.weightsColumn == null ? null : p.weightsColumn.columnName, p.offsetColumn == null ? null : p.offsetColumn.columnName, p.foldColumn == null ? null : p.foldColumn.columnName, p.foldAssignment, p.categoricalEncoding, p.maxCategoricalLevels, p.ignoredColumns, p.ignoreConstCols, p.scoreEachIteration, p.checkpoint == null ? null : p.checkpoint.name, p.stoppingRounds, p.maxRuntimeSecs, p.stoppingMetric, p.stoppingTolerance, p.customMetricFunc);
        }

        public static Call<GridSearchSchema> trainDeepwater(GridSearch z, String hyperParams,String searchCriteria, DeepWaterParametersV3 p) {
            return z.trainDeepwater(hyperParams, searchCriteria, p.problemType, p.activation, p.hidden, p.inputDropoutRatio, p.hiddenDropoutRatios, p.maxConfusionMatrixSize, p.sparse, p.maxHitRatioK, p.epochs, p.trainSamplesPerIteration, p.targetRatioCommToComp, p.seed, p.learningRate, p.learningRateAnnealing, p.momentumStart, p.momentumRamp, p.momentumStable, p.scoreInterval, p.scoreTrainingSamples, p.scoreValidationSamples, p.scoreDutyCycle, p.classificationStop, p.regressionStop, p.quietMode, p.overwriteWithBestModel, p.autoencoder, p.diagnostics, p.variableImportances, p.replicateTrainingData, p.singleNodeMode, p.shuffleTrainingData, p.miniBatchSize, p.clipGradient, p.network, p.backend, p.imageShape, p.channels, p.gpu, p.deviceId, p.cacheData, p.networkDefinitionFile, p.networkParametersFile, p.meanImageFile, p.exportNativeParametersPrefix, p.standardize, p.balanceClasses, p.classSamplingFactors, p.maxAfterBalanceSize, p.modelId == null ? null : p.modelId.name, p.trainingFrame == null ? null : p.trainingFrame.name, p.validationFrame == null ? null : p.validationFrame.name, p.nfolds, p.keepCrossValidationPredictions, p.keepCrossValidationFoldAssignment, p.parallelizeCrossValidation, p.distribution, p.tweediePower, p.quantileAlpha, p.huberAlpha, p.responseColumn == null ? null : p.responseColumn.columnName, p.weightsColumn == null ? null : p.weightsColumn.columnName, p.offsetColumn == null ? null : p.offsetColumn.columnName, p.foldColumn == null ? null : p.foldColumn.columnName, p.foldAssignment, p.categoricalEncoding, p.maxCategoricalLevels, p.ignoredColumns, p.ignoreConstCols, p.scoreEachIteration, p.checkpoint == null ? null : p.checkpoint.name, p.stoppingRounds, p.maxRuntimeSecs, p.stoppingMetric, p.stoppingTolerance, p.customMetricFunc);
        }

        public static Call<GridSearchSchema> trainWord2vec(GridSearch z, String hyperParams, String searchCriteria, Word2VecParametersV3 p) {
            return z.trainWord2vec(hyperParams, searchCriteria, p.vecSize, p.windowSize, p.sentSampleRate, p.normModel, p.epochs, p.minWordFreq, p.initLearningRate, p.wordModel, p.preTrained == null ? null : p.preTrained.name, p.modelId == null ? null : p.modelId.name, p.trainingFrame == null ? null : p.trainingFrame.name, p.validationFrame == null ? null : p.validationFrame.name, p.nfolds, p.keepCrossValidationPredictions, p.keepCrossValidationFoldAssignment, p.parallelizeCrossValidation, p.distribution, p.tweediePower, p.quantileAlpha, p.huberAlpha, p.responseColumn == null ? null : p.responseColumn.columnName, p.weightsColumn == null ? null : p.weightsColumn.columnName, p.offsetColumn == null ? null : p.offsetColumn.columnName, p.foldColumn == null ? null : p.foldColumn.columnName, p.foldAssignment, p.categoricalEncoding, p.maxCategoricalLevels, p.ignoredColumns, p.ignoreConstCols, p.scoreEachIteration, p.checkpoint == null ? null : p.checkpoint.name, p.stoppingRounds, p.maxRuntimeSecs, p.stoppingMetric, p.stoppingTolerance, p.customMetricFunc);
        }

        public static Call<GridSearchSchema> trainStackedensemble(GridSearch z, String hyperParams, String searchCriteria, StackedEnsembleParametersV99 p) {
            return z.trainStackedensemble(hyperParams, searchCriteria, p.baseModels == null ? null : keyArrayToStringArray(p.baseModels), p.metalearnerAlgorithm, p.metalearnerNfolds, p.metalearnerFoldAssignment, p.metalearnerFoldColumn == null ? null : p.metalearnerFoldColumn.columnName, p.keepLeveloneFrame, p.metalearnerParams, p.seed, p.modelId == null ? null : p.modelId.name, p.trainingFrame == null ? null : p.trainingFrame.name, p.validationFrame == null ? null : p.validationFrame.name, p.nfolds, p.keepCrossValidationPredictions, p.keepCrossValidationFoldAssignment, p.parallelizeCrossValidation, p.distribution, p.tweediePower, p.quantileAlpha, p.huberAlpha, p.responseColumn == null ? null : p.responseColumn.columnName, p.weightsColumn == null ? null : p.weightsColumn.columnName, p.offsetColumn == null ? null : p.offsetColumn.columnName, p.foldColumn == null ? null : p.foldColumn.columnName, p.foldAssignment, p.categoricalEncoding, p.maxCategoricalLevels, p.ignoredColumns, p.ignoreConstCols, p.scoreEachIteration, p.checkpoint == null ? null : p.checkpoint.name, p.stoppingRounds, p.maxRuntimeSecs, p.stoppingMetric, p.stoppingTolerance, p.customMetricFunc);
        }

        public static Call<GridSearchSchema> trainCoxph(GridSearch z, String hyperParams, String searchCriteria, CoxPHParametersV3 p) {
            return z.trainCoxph(hyperParams, searchCriteria, p.startColumn == null ? null : p.startColumn.columnName, p.stopColumn == null ? null : p.stopColumn.columnName, p.stratifyBy, p.ties, p.init, p.lreMin, p.maxIterations, p.interactionsOnly, p.interactions, p.interactionPairs, p.useAllFactorLevels, p.modelId == null ? null : p.modelId.name, p.trainingFrame == null ? null : p.trainingFrame.name, p.validationFrame == null ? null : p.validationFrame.name, p.nfolds, p.keepCrossValidationPredictions, p.keepCrossValidationFoldAssignment, p.parallelizeCrossValidation, p.distribution, p.tweediePower, p.quantileAlpha, p.huberAlpha, p.responseColumn == null ? null : p.responseColumn.columnName, p.weightsColumn == null ? null : p.weightsColumn.columnName, p.offsetColumn == null ? null : p.offsetColumn.columnName, p.foldColumn == null ? null : p.foldColumn.columnName, p.foldAssignment, p.categoricalEncoding, p.maxCategoricalLevels, p.ignoredColumns, p.ignoreConstCols, p.scoreEachIteration, p.checkpoint == null ? null : p.checkpoint.name, p.stoppingRounds, p.maxRuntimeSecs, p.stoppingMetric, p.stoppingTolerance, p.customMetricFunc);
        }

        public static String[] keyArrayToStringArray(KeyV3[] keys) {
            if (keys == null) {
                return null;
            } else {
                String[] ids = new String[keys.length];
                int i = 0;
                KeyV3[] var3 = keys;
                int var4 = keys.length;

                for(int var5 = 0; var5 < var4; ++var5) {
                    KeyV3 key = var3[var5];
                    ids[i++] = key.name;
                }

                return ids;
            }
        }
    }
}
